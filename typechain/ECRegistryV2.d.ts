/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ECRegistryV2Interface extends ethers.utils.Interface {
  functions: {
    "addTrait(string[],address[],uint8[],uint16[],uint16[])": FunctionFragment;
    "addressCanModifyTrait(address,uint16)": FunctionFragment;
    "addressCanModifyTraits(address,uint16[])": FunctionFragment;
    "getByteAndBit(uint16)": FunctionFragment;
    "getContractControllerAt(uint256)": FunctionFragment;
    "getContractControllerContains(address)": FunctionFragment;
    "getContractControllerLength()": FunctionFragment;
    "getData(uint16,uint8,uint16)": FunctionFragment;
    "getImplementer(uint16)": FunctionFragment;
    "getTokenData(uint16)": FunctionFragment;
    "getTraitControllerAccessData(address)": FunctionFragment;
    "hasTrait(uint16,uint16)": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setContractController(address,bool)": FunctionFragment;
    "setData(uint16,uint16[],uint8[])": FunctionFragment;
    "setTrait(uint16,uint16,bool)": FunctionFragment;
    "setTraitControllerAccess(address,uint16,bool)": FunctionFragment;
    "setTraitControllerAccessData(address,uint8[])": FunctionFragment;
    "setTraitOnMultiple(uint16,uint16[],bool[])": FunctionFragment;
    "tokenData(uint16,uint16)": FunctionFragment;
    "traitControllerAccess(address,uint8)": FunctionFragment;
    "traitControllerByAddress(address)": FunctionFragment;
    "traitControllerById(uint16)": FunctionFragment;
    "traitControllerCount()": FunctionFragment;
    "traitCount()": FunctionFragment;
    "traits(uint16)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateTrait(uint16,string,address,uint8,uint16,uint16)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addTrait",
    values: [string[], string[], BigNumberish[], BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addressCanModifyTrait",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addressCanModifyTraits",
    values: [string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getByteAndBit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractControllerAt",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractControllerContains",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractControllerLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getData",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getImplementer",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenData",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTraitControllerAccessData",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasTrait",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setContractController",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setData",
    values: [BigNumberish, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setTrait",
    values: [BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setTraitControllerAccess",
    values: [string, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setTraitControllerAccessData",
    values: [string, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setTraitOnMultiple",
    values: [BigNumberish, BigNumberish[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenData",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "traitControllerAccess",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "traitControllerByAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "traitControllerById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "traitControllerCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "traitCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "traits",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTrait",
    values: [
      BigNumberish,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;

  decodeFunctionResult(functionFragment: "addTrait", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addressCanModifyTrait",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addressCanModifyTraits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getByteAndBit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractControllerAt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractControllerContains",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractControllerLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getData", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getImplementer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTraitControllerAccessData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "hasTrait", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setContractController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setData", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setTrait", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTraitControllerAccess",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTraitControllerAccessData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTraitOnMultiple",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenData", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "traitControllerAccess",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "traitControllerByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "traitControllerById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "traitControllerCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "traitCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "traits", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTrait",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "contractControllerEvent(address,bool)": EventFragment;
    "newTraitEvent(string,address,uint8,uint16,uint16)": EventFragment;
    "tokenTraitChangeEvent(uint16,uint16,bool)": EventFragment;
    "traitControllerEvent(address)": EventFragment;
    "updateTraitDataEvent(uint16)": EventFragment;
    "updateTraitEvent(uint16,string,address,uint8,uint16,uint16)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "contractControllerEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "newTraitEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "tokenTraitChangeEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "traitControllerEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "updateTraitDataEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "updateTraitEvent"): EventFragment;
}

export type OwnershipTransferredEvent = TypedEvent<
  [string, string] & { previousOwner: string; newOwner: string }
>;

export type contractControllerEventEvent = TypedEvent<
  [string, boolean] & { _address: string; mode: boolean }
>;

export type newTraitEventEvent = TypedEvent<
  [string, string, number, number, number] & {
    _name: string;
    _address: string;
    _traitType: number;
    _start: number;
    _end: number;
  }
>;

export type tokenTraitChangeEventEvent = TypedEvent<
  [number, number, boolean] & {
    _traitId: number;
    _tokenId: number;
    mode: boolean;
  }
>;

export type traitControllerEventEvent = TypedEvent<
  [string] & { _address: string }
>;

export type updateTraitDataEventEvent = TypedEvent<[number] & { _id: number }>;

export type updateTraitEventEvent = TypedEvent<
  [number, string, string, number, number, number] & {
    _id: number;
    _name: string;
    _address: string;
    _traitType: number;
    _start: number;
    _end: number;
  }
>;

export class ECRegistryV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ECRegistryV2Interface;

  functions: {
    addTrait(
      _name: string[],
      _implementer: string[],
      _traitType: BigNumberish[],
      _start: BigNumberish[],
      _end: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addressCanModifyTrait(
      _addr: string,
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean] & { result: boolean }>;

    addressCanModifyTraits(
      _addr: string,
      traitIDs: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean] & { result: boolean }>;

    getByteAndBit(
      _offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number, number] & { _byte: number; _bit: number }>;

    getContractControllerAt(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getContractControllerContains(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getContractControllerLength(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getData(
      traitId: BigNumberish,
      _page: BigNumberish,
      _perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number[]]>;

    getImplementer(
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { implementer: string }>;

    getTokenData(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number[]]>;

    getTraitControllerAccessData(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<[number[]]>;

    hasTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean] & { result: boolean }>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setContractController(
      _controller: string,
      _mode: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setData(
      traitId: BigNumberish,
      _ids: BigNumberish[],
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTraitControllerAccess(
      _addr: string,
      traitID: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTraitControllerAccessData(
      _addr: string,
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTraitOnMultiple(
      traitID: BigNumberish,
      tokenIds: BigNumberish[],
      _value: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tokenData(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    traitControllerAccess(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    traitControllerByAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[number]>;

    traitControllerById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    traitControllerCount(overrides?: CallOverrides): Promise<[number]>;

    traitCount(overrides?: CallOverrides): Promise<[number]>;

    traits(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, string, number, number, number] & {
        name: string;
        implementer: string;
        traitType: number;
        start: number;
        end: number;
      }
    >;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateTrait(
      _traitId: BigNumberish,
      _name: string,
      _implementer: string,
      _traitType: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addTrait(
    _name: string[],
    _implementer: string[],
    _traitType: BigNumberish[],
    _start: BigNumberish[],
    _end: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addressCanModifyTrait(
    _addr: string,
    traitID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  addressCanModifyTraits(
    _addr: string,
    traitIDs: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  getByteAndBit(
    _offset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[number, number] & { _byte: number; _bit: number }>;

  getContractControllerAt(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getContractControllerContains(
    _addr: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getContractControllerLength(overrides?: CallOverrides): Promise<BigNumber>;

  getData(
    traitId: BigNumberish,
    _page: BigNumberish,
    _perPage: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number[]>;

  getImplementer(
    traitID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getTokenData(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number[]>;

  getTraitControllerAccessData(
    _addr: string,
    overrides?: CallOverrides
  ): Promise<number[]>;

  hasTrait(
    traitID: BigNumberish,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setContractController(
    _controller: string,
    _mode: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setData(
    traitId: BigNumberish,
    _ids: BigNumberish[],
    _data: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTrait(
    traitID: BigNumberish,
    tokenId: BigNumberish,
    _value: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTraitControllerAccess(
    _addr: string,
    traitID: BigNumberish,
    _value: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTraitControllerAccessData(
    _addr: string,
    _data: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTraitOnMultiple(
    traitID: BigNumberish,
    tokenIds: BigNumberish[],
    _value: boolean[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tokenData(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  traitControllerAccess(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  traitControllerByAddress(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<number>;

  traitControllerById(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  traitControllerCount(overrides?: CallOverrides): Promise<number>;

  traitCount(overrides?: CallOverrides): Promise<number>;

  traits(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, string, number, number, number] & {
      name: string;
      implementer: string;
      traitType: number;
      start: number;
      end: number;
    }
  >;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateTrait(
    _traitId: BigNumberish,
    _name: string,
    _implementer: string,
    _traitType: BigNumberish,
    _start: BigNumberish,
    _end: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addTrait(
      _name: string[],
      _implementer: string[],
      _traitType: BigNumberish[],
      _start: BigNumberish[],
      _end: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    addressCanModifyTrait(
      _addr: string,
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    addressCanModifyTraits(
      _addr: string,
      traitIDs: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    getByteAndBit(
      _offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number, number] & { _byte: number; _bit: number }>;

    getContractControllerAt(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getContractControllerContains(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getContractControllerLength(overrides?: CallOverrides): Promise<BigNumber>;

    getData(
      traitId: BigNumberish,
      _page: BigNumberish,
      _perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number[]>;

    getImplementer(
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getTokenData(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number[]>;

    getTraitControllerAccessData(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<number[]>;

    hasTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setContractController(
      _controller: string,
      _mode: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setData(
      traitId: BigNumberish,
      _ids: BigNumberish[],
      _data: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      _value: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setTraitControllerAccess(
      _addr: string,
      traitID: BigNumberish,
      _value: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setTraitControllerAccessData(
      _addr: string,
      _data: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setTraitOnMultiple(
      traitID: BigNumberish,
      tokenIds: BigNumberish[],
      _value: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    tokenData(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    traitControllerAccess(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    traitControllerByAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<number>;

    traitControllerById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    traitControllerCount(overrides?: CallOverrides): Promise<number>;

    traitCount(overrides?: CallOverrides): Promise<number>;

    traits(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, string, number, number, number] & {
        name: string;
        implementer: string;
        traitType: number;
        start: number;
        end: number;
      }
    >;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTrait(
      _traitId: BigNumberish,
      _name: string,
      _implementer: string,
      _traitType: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    "contractControllerEvent(address,bool)"(
      _address?: null,
      mode?: null
    ): TypedEventFilter<[string, boolean], { _address: string; mode: boolean }>;

    contractControllerEvent(
      _address?: null,
      mode?: null
    ): TypedEventFilter<[string, boolean], { _address: string; mode: boolean }>;

    "newTraitEvent(string,address,uint8,uint16,uint16)"(
      _name?: null,
      _address?: null,
      _traitType?: null,
      _start?: null,
      _end?: null
    ): TypedEventFilter<
      [string, string, number, number, number],
      {
        _name: string;
        _address: string;
        _traitType: number;
        _start: number;
        _end: number;
      }
    >;

    newTraitEvent(
      _name?: null,
      _address?: null,
      _traitType?: null,
      _start?: null,
      _end?: null
    ): TypedEventFilter<
      [string, string, number, number, number],
      {
        _name: string;
        _address: string;
        _traitType: number;
        _start: number;
        _end: number;
      }
    >;

    "tokenTraitChangeEvent(uint16,uint16,bool)"(
      _traitId?: BigNumberish | null,
      _tokenId?: BigNumberish | null,
      mode?: null
    ): TypedEventFilter<
      [number, number, boolean],
      { _traitId: number; _tokenId: number; mode: boolean }
    >;

    tokenTraitChangeEvent(
      _traitId?: BigNumberish | null,
      _tokenId?: BigNumberish | null,
      mode?: null
    ): TypedEventFilter<
      [number, number, boolean],
      { _traitId: number; _tokenId: number; mode: boolean }
    >;

    "traitControllerEvent(address)"(
      _address?: null
    ): TypedEventFilter<[string], { _address: string }>;

    traitControllerEvent(
      _address?: null
    ): TypedEventFilter<[string], { _address: string }>;

    "updateTraitDataEvent(uint16)"(
      _id?: BigNumberish | null
    ): TypedEventFilter<[number], { _id: number }>;

    updateTraitDataEvent(
      _id?: BigNumberish | null
    ): TypedEventFilter<[number], { _id: number }>;

    "updateTraitEvent(uint16,string,address,uint8,uint16,uint16)"(
      _id?: BigNumberish | null,
      _name?: null,
      _address?: null,
      _traitType?: null,
      _start?: null,
      _end?: null
    ): TypedEventFilter<
      [number, string, string, number, number, number],
      {
        _id: number;
        _name: string;
        _address: string;
        _traitType: number;
        _start: number;
        _end: number;
      }
    >;

    updateTraitEvent(
      _id?: BigNumberish | null,
      _name?: null,
      _address?: null,
      _traitType?: null,
      _start?: null,
      _end?: null
    ): TypedEventFilter<
      [number, string, string, number, number, number],
      {
        _id: number;
        _name: string;
        _address: string;
        _traitType: number;
        _start: number;
        _end: number;
      }
    >;
  };

  estimateGas: {
    addTrait(
      _name: string[],
      _implementer: string[],
      _traitType: BigNumberish[],
      _start: BigNumberish[],
      _end: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addressCanModifyTrait(
      _addr: string,
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addressCanModifyTraits(
      _addr: string,
      traitIDs: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getByteAndBit(
      _offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractControllerAt(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractControllerContains(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractControllerLength(overrides?: CallOverrides): Promise<BigNumber>;

    getData(
      traitId: BigNumberish,
      _page: BigNumberish,
      _perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getImplementer(
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenData(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTraitControllerAccessData(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setContractController(
      _controller: string,
      _mode: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setData(
      traitId: BigNumberish,
      _ids: BigNumberish[],
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTraitControllerAccess(
      _addr: string,
      traitID: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTraitControllerAccessData(
      _addr: string,
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTraitOnMultiple(
      traitID: BigNumberish,
      tokenIds: BigNumberish[],
      _value: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tokenData(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    traitControllerAccess(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    traitControllerByAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    traitControllerById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    traitControllerCount(overrides?: CallOverrides): Promise<BigNumber>;

    traitCount(overrides?: CallOverrides): Promise<BigNumber>;

    traits(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateTrait(
      _traitId: BigNumberish,
      _name: string,
      _implementer: string,
      _traitType: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTrait(
      _name: string[],
      _implementer: string[],
      _traitType: BigNumberish[],
      _start: BigNumberish[],
      _end: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addressCanModifyTrait(
      _addr: string,
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addressCanModifyTraits(
      _addr: string,
      traitIDs: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getByteAndBit(
      _offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContractControllerAt(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContractControllerContains(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContractControllerLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getData(
      traitId: BigNumberish,
      _page: BigNumberish,
      _perPage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getImplementer(
      traitID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenData(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTraitControllerAccessData(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setContractController(
      _controller: string,
      _mode: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setData(
      traitId: BigNumberish,
      _ids: BigNumberish[],
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTrait(
      traitID: BigNumberish,
      tokenId: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTraitControllerAccess(
      _addr: string,
      traitID: BigNumberish,
      _value: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTraitControllerAccessData(
      _addr: string,
      _data: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTraitOnMultiple(
      traitID: BigNumberish,
      tokenIds: BigNumberish[],
      _value: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tokenData(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    traitControllerAccess(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    traitControllerByAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    traitControllerById(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    traitControllerCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    traitCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    traits(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateTrait(
      _traitId: BigNumberish,
      _name: string,
      _implementer: string,
      _traitType: BigNumberish,
      _start: BigNumberish,
      _end: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
